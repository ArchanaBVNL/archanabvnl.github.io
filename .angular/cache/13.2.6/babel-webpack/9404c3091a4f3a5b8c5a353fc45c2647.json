{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/forecast.service\";\nimport * as i2 from \"src/app/services/maps.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction WeatherComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 2);\n    i0.ɵɵtext(2, \"Loading... Please wait...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction WeatherComponent_div_1_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction WeatherComponent_div_1_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \"\\u2109\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.weather.current[\"temp_f\"], \"\\u00A0 \");\n  }\n}\n\nfunction WeatherComponent_div_1_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \"\\u2103\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.weather.current[\"temp_c\"], \"\\u00A0 \");\n  }\n}\n\nfunction WeatherComponent_div_1_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction WeatherComponent_div_1_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \"\\u2109\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" FEELS LIKE \", ctx_r9.weather.current[\"feelslike_f\"], \"\\u00A0 \");\n  }\n}\n\nfunction WeatherComponent_div_1_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \"\\u2103\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" FEELS LIKE \", ctx_r11.weather.current[\"feelslike_c\"], \"\\u00A0 \");\n  }\n}\n\nfunction WeatherComponent_div_1_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 29);\n  }\n}\n\nfunction WeatherComponent_div_1_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r14.weather.current[\"gust_mph\"], \" mph\");\n  }\n}\n\nfunction WeatherComponent_div_1_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r16.weather.current[\"gust_kph\"], \" kph\");\n  }\n}\n\nfunction WeatherComponent_div_1_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 29);\n  }\n}\n\nfunction WeatherComponent_div_1_ng_template_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r19.weather.current[\"vis_miles\"], \" mi\");\n  }\n}\n\nfunction WeatherComponent_div_1_ng_template_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r21.weather.current[\"vis_km\"], \" km\");\n  }\n}\n\nfunction WeatherComponent_div_1_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 29);\n  }\n}\n\nfunction WeatherComponent_div_1_ng_template_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r24.weather.current[\"pressure_in\"], \" in\");\n  }\n}\n\nfunction WeatherComponent_div_1_ng_template_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r26.weather.current[\"pressure_mb\"], \" mb\");\n  }\n}\n\nfunction WeatherComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5);\n    i0.ɵɵtext(3, \" CURRENT WEATHER \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"img\", 6);\n    i0.ɵɵlistener(\"click\", function WeatherComponent_div_1_Template_img_click_4_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.toggleHeartImage();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h6\", 7);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 8)(8, \"span\");\n    i0.ɵɵelement(9, \"img\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, WeatherComponent_div_1_div_10_Template, 1, 0, \"div\", 10);\n    i0.ɵɵtemplate(11, WeatherComponent_div_1_ng_template_11_Template, 4, 1, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(13, WeatherComponent_div_1_ng_template_13_Template, 4, 1, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(15, \"h6\", 13);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, WeatherComponent_div_1_div_17_Template, 1, 0, \"div\", 10);\n    i0.ɵɵtemplate(18, WeatherComponent_div_1_ng_template_18_Template, 4, 1, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(20, WeatherComponent_div_1_ng_template_20_Template, 4, 1, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 16)(23, \"div\", 17)(24, \"div\", 18)(25, \"div\", 19)(26, \"span\");\n    i0.ɵɵtext(27, \"Wind\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(28, WeatherComponent_div_1_div_28_Template, 1, 0, \"div\", 20);\n    i0.ɵɵtemplate(29, WeatherComponent_div_1_ng_template_29_Template, 2, 1, \"ng-template\", null, 21, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(31, WeatherComponent_div_1_ng_template_31_Template, 2, 1, \"ng-template\", null, 22, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"div\", 17)(34, \"div\", 18)(35, \"div\", 19)(36, \"span\");\n    i0.ɵɵtext(37, \"Humidity\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(38, \"span\");\n    i0.ɵɵtext(39);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(40, \"div\", 17)(41, \"div\", 18)(42, \"div\", 19)(43, \"span\");\n    i0.ɵɵtext(44, \"Visibility\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(45, WeatherComponent_div_1_div_45_Template, 1, 0, \"div\", 20);\n    i0.ɵɵtemplate(46, WeatherComponent_div_1_ng_template_46_Template, 2, 1, \"ng-template\", null, 23, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(48, WeatherComponent_div_1_ng_template_48_Template, 2, 1, \"ng-template\", null, 24, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"div\", 17)(51, \"div\", 18)(52, \"div\", 19)(53, \"span\");\n    i0.ɵɵtext(54, \"Pressure\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(55, WeatherComponent_div_1_div_55_Template, 1, 0, \"div\", 20);\n    i0.ɵɵtemplate(56, WeatherComponent_div_1_ng_template_56_Template, 2, 1, \"ng-template\", null, 25, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(58, WeatherComponent_div_1_ng_template_58_Template, 2, 1, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(12);\n\n    const _r5 = i0.ɵɵreference(14);\n\n    const _r8 = i0.ɵɵreference(19);\n\n    const _r10 = i0.ɵɵreference(21);\n\n    const _r13 = i0.ɵɵreference(30);\n\n    const _r15 = i0.ɵɵreference(32);\n\n    const _r18 = i0.ɵɵreference(47);\n\n    const _r20 = i0.ɵɵreference(49);\n\n    const _r23 = i0.ɵɵreference(57);\n\n    const _r25 = i0.ɵɵreference(59);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", ctx_r1.heartImage, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.location);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r1.weather.current[\"condition\"].icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.temperatureUnit == \"F\")(\"ngIfThen\", _r3)(\"ngIfElse\", _r5);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.weather.current[\"condition\"].text, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.temperatureUnit == \"F\")(\"ngIfThen\", _r8)(\"ngIfElse\", _r10);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.temperatureUnit == \"F\")(\"ngIfThen\", _r13)(\"ngIfElse\", _r15);\n    i0.ɵɵadvance(11);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.weather.current[\"humidity\"], \"%\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.temperatureUnit == \"F\")(\"ngIfThen\", _r18)(\"ngIfElse\", _r20);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.temperatureUnit == \"F\")(\"ngIfThen\", _r23)(\"ngIfElse\", _r25);\n  }\n}\n\nexport let WeatherComponent = /*#__PURE__*/(() => {\n  class WeatherComponent {\n    constructor(forecastService, mapsService) {\n      this.forecastService = forecastService;\n      this.mapsService = mapsService;\n      this.location = '';\n      this.latitude = 0;\n      this.longitude = 0;\n      this.flag = false;\n      this.input = [];\n      this.currentLocation = '';\n      this.temperatureUnit = '';\n      this.heartImage = '';\n      this.heartImagePath = './assets/heart.svg';\n      this.heartFilledImagePath = './assets/heart-fill.svg';\n      this.favLocationsChanged = new BehaviorSubject(false);\n      this.imageUrl = new Subject();\n      this.newImageUrl = new EventEmitter();\n    }\n\n    ngOnInit() {\n      // set user entered search location \n      this.searchText.subscribe(v => {\n        this.currentLocation = v;\n        this.input = [this.currentLocation]; // fetch weather info for the location\n\n        this.getWeatherInfo();\n      }); // set temperature unit when changed to F to C or from C to F\n\n      this.tempUnit.subscribe(v => {\n        this.temperatureUnit = v;\n      }); // if current location is not set then find the user's current location to get local weather info\n\n      if (!this.currentLocation && this.currentLocation !== undefined) {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(position => {\n            // current location coordinates \n            this.latitude = position.coords.latitude;\n            this.longitude = position.coords.longitude;\n            this.input = [this.latitude, this.longitude];\n            this.getWeatherInfo();\n          });\n        } else {\n          console.log(\"Geolocation not available\");\n        }\n      } else {\n        this.input = [this.currentLocation];\n        this.getWeatherInfo();\n      }\n    } // set the user location by call geolocation\n\n\n    setUserLocation() {\n      navigator.geolocation.getCurrentPosition(position => {\n        // start and current coordinates are same for update 1\n        this.latitude = position.coords.latitude;\n        this.longitude = position.coords.longitude;\n        this.getWeatherInfo();\n      });\n    } // fetch the weather information for given location\n\n\n    getWeatherInfo() {\n      this.forecastService.getCurrentWeather(this.input).subscribe({\n        next: data => {\n          // read the weather data using forecastService\n          this.weather = data; // set the location name and state\n\n          this.location = `${this.weather.location['name']}, ${this.weather.location['region']}`; // read the locations stored in the local storage if any\n\n          let locations = JSON.parse(localStorage.getItem('locations') || '[]');\n          const filtered = locations.filter(item => item == this.location); // if current location is in favorites then color the heart to indicate favorite\n\n          if (filtered.length > 0) {\n            this.heartImage = this.heartFilledImagePath;\n          } else {\n            this.heartImage = this.heartImagePath;\n          } // get the image for given coordinates\n\n\n          this.setImageURL([this.weather.location['lat'], this.weather.location['lon']]);\n        },\n        error: error => {\n          console.log(\"enable to get weather information, \", error);\n        }\n      });\n    } // set or unset locations in favorites\n\n\n    toggleHeartImage() {\n      // if the location not already in favorites list \n      if (this.heartImage === this.heartImagePath) {\n        // then set it as marked\n        this.heartImage = this.heartFilledImagePath; // add the new location into the local storage favorites list\n\n        let locations = JSON.parse(localStorage.getItem('locations') || '[]');\n        locations.push(this.location);\n        localStorage.setItem('locations', JSON.stringify(locations));\n      } else {\n        // if location already in local storage then remove from favorites on user request\n        this.heartImage = this.heartImagePath;\n        let locations = JSON.parse(localStorage.getItem('locations') || '[]');\n        const filtered = locations.filter(item => item !== this.location);\n        localStorage.setItem('locations', JSON.stringify(filtered));\n      }\n\n      this.favLocationsChanged.next(true);\n    } // set the image url for given location \n\n\n    setImageURL(input) {\n      this.mapsService.getMapImage(input).subscribe({\n        // using the mapsService process the blob and retrieve the image URL \n        next: data => {\n          var reader = new FileReader();\n          reader.readAsDataURL(data);\n\n          reader.onload = event => {\n            this.imgUrl = reader.result;\n            this.newImageUrl.emit(this.imgUrl); // update the image URL\n\n            setTimeout(() => this.imageUrl.next(this.imgUrl), 0);\n          };\n        },\n        error: error => {\n          console.log(\"unable to get Map information, \", error);\n        }\n      });\n    }\n\n  }\n\n  WeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n    return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.ForecastService), i0.ɵɵdirectiveInject(i2.MapsService));\n  };\n\n  WeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeatherComponent,\n    selectors: [[\"app-weather\"]],\n    inputs: {\n      searchText: \"searchText\",\n      tempUnit: \"tempUnit\"\n    },\n    outputs: {\n      favLocationsChanged: \"favLocationsChanged\",\n      newImageUrl: \"newImageUrl\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"class\", \"weatherCard\", 4, \"ngIf\"], [2, \"margin-left\", \"3rem\"], [1, \"weatherCard\"], [1, \"weatherCard-body\"], [1, \"location-info\"], [\"width\", \"20px\", \"height\", \"20px\", 2, \"cursor\", \"pointer\", \"float\", \"right\", \"margin-top\", \"-20px\", 3, \"src\", \"click\"], [1, \"weatherCard-title\"], [1, \"tempOverview\"], [\"width\", \"76px\", \"height\", \"76px\", \"alt\", \"weather icon\", 1, \"weatherCard-img-left\", 3, \"src\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"fTemp\", \"\"], [\"cTemp\", \"\"], [1, \"weatherCard-info\", \"mb-2\"], [\"flTemp\", \"\"], [\"clTemp\", \"\"], [1, \"moreInfo\"], [1, \"links\"], [1, \"info-link\"], [1, \"weatherCard-link\", \"text-white\"], [\"class\", \"info-text\", 4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"fgTemp\", \"\"], [\"cgTemp\", \"\"], [\"fvTemp\", \"\"], [\"cvTemp\", \"\"], [\"fpTemp\", \"\"], [\"cpTemp\", \"\"], [1, \"weatherCard-summary\", \"mb-2\"], [1, \"weatherCard-info-1\"], [1, \"info-text\"]],\n    template: function WeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, WeatherComponent_div_0_Template, 3, 0, \"div\", 0);\n        i0.ɵɵtemplate(1, WeatherComponent_div_1_Template, 60, 20, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.weather);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.weather);\n      }\n    },\n    directives: [i3.NgIf],\n    styles: [\".weatherCard[_ngcontent-%COMP%]{margin-left:3rem;margin-top:2rem}.links[_ngcontent-%COMP%]{height:38px;display:inline-block;margin:1rem}div[_ngcontent-%COMP%]{display:block}.weatherCard-body[_ngcontent-%COMP%]{border:1px solid #d88549;border-radius:5px;padding:17px;background-color:#d88549}.weatherCard-summary[_ngcontent-%COMP%]{margin-top:-3.5rem;margin-left:4.5rem;font-size:35px;align-items:center;direction:ltr;display:flex}.weatherCard-info[_ngcontent-%COMP%]{margin-top:-3.5rem;align-items:center;margin-left:15rem}.weatherCard-info-1[_ngcontent-%COMP%]{align-items:center;margin-left:15rem}img[_ngcontent-%COMP%]{margin-right:2rem}.info-text[_ngcontent-%COMP%]{font-size:16px;line-height:22px;font-weight:400;margin-top:.5rem;margin-left:auto}.moreInfo[_ngcontent-%COMP%]{margin-left:1rem}\"]\n  });\n  return WeatherComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}